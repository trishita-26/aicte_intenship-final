# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KEjET5alwy21xLIkUvgYZmTYjsSYpSh1
"""

import gradio as gr
import pickle
import numpy as np

# Load models and scalers
crop_model = pickle.load(open("crop_recommend.pkl", "rb"))
crop_scaler = pickle.load(open("standard_scaler.pkl", "rb"))

fert_model = pickle.load(open("fertilizer_model.pkl", "rb"))
fert_scaler = pickle.load(open("fertilizer_scaler.pkl", "rb"))

# --- CROP PREDICTION FUNCTION ---
def predict_crop(temp, humidity, ph, rainfall, N, P, K):
    input_data = np.array([[temp, humidity, ph, rainfall, N, P, K]])
    input_scaled = crop_scaler.transform(input_data)
    prediction = crop_model.predict(input_scaled)[0]

    # Mapping from model output to crop names
    crop_dict = {
        1: "Rice", 2: "Maize", 3: "Jute", 4: "Cotton", 5: "Coconut",
        6: "Papaya", 7: "Orange", 8: "Apple", 9: "Muskmelon", 10: "Watermelon",
        11: "Grapes", 12: "Mango", 13: "Banana", 14: "Pomegranate", 15: "Lentil",
        16: "Blackgram", 17: "Mungbean", 18: "Mothbeans", 19: "Pigeonpeas",
        20: "Kidneybeans", 21: "Chickpea", 22: "Coffee"
    }

    crop_name = crop_dict.get(int(prediction), "Unknown Crop")
    return f"The recommended crop for the given conditions is: **{crop_name}**"

# --- FERTILIZER RECOMMENDATION FUNCTION ---
def recommend_fertilizer(temp, humidity, moisture, soil, crop, N, P, K):
    soil_dict = {'Sandy': 0, 'Loamy': 1, 'Black': 2}
    crop_dict = {'Wheat': 0, 'Rice': 1, 'Maize': 2}

    input_data = np.array([[temp, humidity, moisture, soil_dict[soil], crop_dict[crop], N, P, K]])
    input_scaled = fert_scaler.transform(input_data)
    prediction = fert_model.predict(input_scaled)[0]

    fert_dict = {1: "Urea", 2: "DAP", 3: "14-35-14", 4: "28-28", 5: "17-17-17", 6: "20-20", 7: "10-26-26"}
    return f"The recommended fertilizer is: **{fert_dict[int(prediction)]}**"

# Gradio Interface: CROP TAB
crop_tab = gr.Interface(
    fn=predict_crop,
    inputs=[
        gr.Number(label="Temperature (Â°C)"),
        gr.Number(label="Humidity (%)"),
        gr.Number(label="pH Level"),
        gr.Number(label="Rainfall (mm)"),
        gr.Number(label="Nitrogen (N)"),
        gr.Number(label="Phosphorus (P)"),
        gr.Number(label="Potassium (K)")
    ],
    outputs="text",
    title="ðŸŒ¾ Crop Prediction"
)

# Gradio Interface: FERTILIZER TAB
fertilizer_tab = gr.Interface(
    fn=recommend_fertilizer,
    inputs=[
        gr.Number(label="Temperature (Â°C)"),
        gr.Number(label="Humidity (%)"),
        gr.Number(label="Moisture (%)"),
        gr.Dropdown(["Sandy", "Loamy", "Black"], label="Soil Type"),
        gr.Dropdown(["Wheat", "Rice", "Maize"], label="Crop Type"),
        gr.Number(label="Nitrogen (N)"),
        gr.Number(label="Phosphorus (P)"),
        gr.Number(label="Potassium (K)")
    ],
    outputs="text",
    title="ðŸ§ª Fertilizer Recommendation"
)

# Combine Tabs
app = gr.TabbedInterface([crop_tab, fertilizer_tab], ["Crop Prediction", "Fertilizer Recommendation"])
app.launch()

!pip install gradio

